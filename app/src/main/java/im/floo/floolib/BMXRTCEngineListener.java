/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package im.floo.floolib;

public class BMXRTCEngineListener {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BMXRTCEngineListener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BMXRTCEngineListener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        flooJNI.delete_BMXRTCEngineListener(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    flooJNI.BMXRTCEngineListener_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    flooJNI.BMXRTCEngineListener_change_ownership(this, swigCPtr, true);
  }

  public void onJoinRoom(String info, long roomId, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onJoinRoom(swigCPtr, this, info, roomId, error.swigValue()); else flooJNI.BMXRTCEngineListener_onJoinRoomSwigExplicitBMXRTCEngineListener(swigCPtr, this, info, roomId, error.swigValue());
  }

  public void onLeaveRoom(String info, long roomId, BMXErrorCode error, String reason) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onLeaveRoom(swigCPtr, this, info, roomId, error.swigValue(), reason); else flooJNI.BMXRTCEngineListener_onLeaveRoomSwigExplicitBMXRTCEngineListener(swigCPtr, this, info, roomId, error.swigValue(), reason);
  }

  public void onRejoining(long roomId, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRejoining(swigCPtr, this, roomId, error.swigValue()); else flooJNI.BMXRTCEngineListener_onRejoiningSwigExplicitBMXRTCEngineListener(swigCPtr, this, roomId, error.swigValue());
  }

  public void onReJoinRoom(String info, long roomId, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onReJoinRoom(swigCPtr, this, info, roomId, error.swigValue()); else flooJNI.BMXRTCEngineListener_onReJoinRoomSwigExplicitBMXRTCEngineListener(swigCPtr, this, info, roomId, error.swigValue());
  }

  public void onMemberJoined(long roomId, long usedId) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onMemberJoined(swigCPtr, this, roomId, usedId); else flooJNI.BMXRTCEngineListener_onMemberJoinedSwigExplicitBMXRTCEngineListener(swigCPtr, this, roomId, usedId);
  }

  public void onMemberExited(long roomId, long usedId, String reason) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onMemberExited(swigCPtr, this, roomId, usedId, reason); else flooJNI.BMXRTCEngineListener_onMemberExitedSwigExplicitBMXRTCEngineListener(swigCPtr, this, roomId, usedId, reason);
  }

  public void onLocalPublish(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onLocalPublish(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onLocalPublishSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public void onLocalUnPublish(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onLocalUnPublish(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onLocalUnPublishSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public void onRemotePublish(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRemotePublish(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onRemotePublishSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public void onRemoteUnPublish(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRemoteUnPublish(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onRemoteUnPublishSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public void onSubscribe(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onSubscribe(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onSubscribeSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public void onUnSubscribe(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onUnSubscribe(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onUnSubscribeSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public void onRemoteTrackNotify(BMXStream stream, BMXTrackType trackType, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRemoteTrackNotify(swigCPtr, this, BMXStream.getCPtr(stream), stream, trackType.swigValue(), info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onRemoteTrackNotifySwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, trackType.swigValue(), info, error.swigValue());
  }

  public void onLocalStreamMuteRsp(BMXStream stream, BMXTrackType trackType, boolean mute, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onLocalStreamMuteRsp(swigCPtr, this, BMXStream.getCPtr(stream), stream, trackType.swigValue(), mute, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onLocalStreamMuteRspSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, trackType.swigValue(), mute, info, error.swigValue());
  }

  public void onRemoteStreamMuteRsp(BMXStream stream, BMXTrackType trackType, boolean mute, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRemoteStreamMuteRsp(swigCPtr, this, BMXStream.getCPtr(stream), stream, trackType.swigValue(), mute, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onRemoteStreamMuteRspSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, trackType.swigValue(), mute, info, error.swigValue());
  }

  public void onSendRTCStats(BMXStreamStats streamStats, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onSendRTCStats(swigCPtr, this, BMXStreamStats.getCPtr(streamStats), streamStats, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onSendRTCStatsSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStreamStats.getCPtr(streamStats), streamStats, info, error.swigValue());
  }

  public void onRemoteRTCStats(BMXStreamStats streamStats, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRemoteRTCStats(swigCPtr, this, BMXStreamStats.getCPtr(streamStats), streamStats, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onRemoteRTCStatsSwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStreamStats.getCPtr(streamStats), streamStats, info, error.swigValue());
  }

  public void onLocalAudioLevel(int volume) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onLocalAudioLevel(swigCPtr, this, volume); else flooJNI.BMXRTCEngineListener_onLocalAudioLevelSwigExplicitBMXRTCEngineListener(swigCPtr, this, volume);
  }

  public void onRemoteAudioLevel(long userId, int volume) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onRemoteAudioLevel(swigCPtr, this, userId, volume); else flooJNI.BMXRTCEngineListener_onRemoteAudioLevelSwigExplicitBMXRTCEngineListener(swigCPtr, this, userId, volume);
  }

  public void onKickoff(String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onKickoff(swigCPtr, this, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onKickoffSwigExplicitBMXRTCEngineListener(swigCPtr, this, info, error.swigValue());
  }

  public void onWarning(String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onWarning(swigCPtr, this, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onWarningSwigExplicitBMXRTCEngineListener(swigCPtr, this, info, error.swigValue());
  }

  public void onError(String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onError(swigCPtr, this, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onErrorSwigExplicitBMXRTCEngineListener(swigCPtr, this, info, error.swigValue());
  }

  public void onNetworkQuality(BMXStream stream, String info, BMXErrorCode error) {
    if (getClass() == BMXRTCEngineListener.class) flooJNI.BMXRTCEngineListener_onNetworkQuality(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue()); else flooJNI.BMXRTCEngineListener_onNetworkQualitySwigExplicitBMXRTCEngineListener(swigCPtr, this, BMXStream.getCPtr(stream), stream, info, error.swigValue());
  }

  public BMXRTCEngineListener() {
    this(flooJNI.new_BMXRTCEngineListener(), true);
    flooJNI.BMXRTCEngineListener_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
