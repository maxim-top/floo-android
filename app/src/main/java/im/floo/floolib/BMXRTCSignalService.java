/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package im.floo.floolib;

public class BMXRTCSignalService {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BMXRTCSignalService(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BMXRTCSignalService obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        flooJNI.delete_BMXRTCSignalService(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static public class BMXRoomCreateOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomCreateOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomCreateOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomCreateOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXRoomCreateOptions(int roomId, String description, String secret, String pin, boolean isPermanent, boolean isPrivate) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_0(roomId, description, secret, pin, isPermanent, isPrivate), true);
    }
  
    public BMXRoomCreateOptions(int roomId, String description, String secret, String pin, boolean isPermanent) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_1(roomId, description, secret, pin, isPermanent), true);
    }
  
    public BMXRoomCreateOptions(int roomId, String description, String secret, String pin) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_2(roomId, description, secret, pin), true);
    }
  
    public BMXRoomCreateOptions(int roomId, String description, String secret) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_3(roomId, description, secret), true);
    }
  
    public BMXRoomCreateOptions(int roomId, String description) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_4(roomId, description), true);
    }
  
    public BMXRoomCreateOptions(int roomId) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_5(roomId), true);
    }
  
    public BMXRoomCreateOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomCreateOptions__SWIG_6(), true);
    }
  
    public void setMRoomId(long value) {
      flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mRoomId_set(swigCPtr, this, value);
    }
  
    public long getMRoomId() {
      return flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mRoomId_get(swigCPtr, this);
    }
  
    public void setMDescription(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mDescription_set(swigCPtr, this, value);
    }
  
    public String getMDescription() {
      return flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mDescription_get(swigCPtr, this);
    }
  
    public void setMSecret(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mSecret_set(swigCPtr, this, value);
    }
  
    public String getMSecret() {
      return flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mSecret_get(swigCPtr, this);
    }
  
    public void setMPin(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mPin_set(swigCPtr, this, value);
    }
  
    public String getMPin() {
      return flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mPin_get(swigCPtr, this);
    }
  
    public void setMIsPermanent(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mIsPermanent_set(swigCPtr, this, value);
    }
  
    public boolean getMIsPermanent() {
      return flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mIsPermanent_get(swigCPtr, this);
    }
  
    public void setMIsPrivate(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mIsPrivate_set(swigCPtr, this, value);
    }
  
    public boolean getMIsPrivate() {
      return flooJNI.BMXRTCSignalService_BMXRoomCreateOptions_mIsPrivate_get(swigCPtr, this);
    }
  
  }

  static public class BMXRoomEditOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomEditOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomEditOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomEditOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXRoomEditOptions(String newDescription, String newSecret, String newPin, boolean newIsPermanent, boolean newIsPrivate) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomEditOptions__SWIG_0(newDescription, newSecret, newPin, newIsPermanent, newIsPrivate), true);
    }
  
    public BMXRoomEditOptions(String newDescription, String newSecret, String newPin, boolean newIsPermanent) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomEditOptions__SWIG_1(newDescription, newSecret, newPin, newIsPermanent), true);
    }
  
    public BMXRoomEditOptions(String newDescription, String newSecret, String newPin) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomEditOptions__SWIG_2(newDescription, newSecret, newPin), true);
    }
  
    public BMXRoomEditOptions(String newDescription, String newSecret) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomEditOptions__SWIG_3(newDescription, newSecret), true);
    }
  
    public BMXRoomEditOptions(String newDescription) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomEditOptions__SWIG_4(newDescription), true);
    }
  
    public BMXRoomEditOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomEditOptions__SWIG_5(), true);
    }
  
    public void setMNewDescription(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewDescription_set(swigCPtr, this, value);
    }
  
    public String getMNewDescription() {
      return flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewDescription_get(swigCPtr, this);
    }
  
    public void setMNewSecret(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewSecret_set(swigCPtr, this, value);
    }
  
    public String getMNewSecret() {
      return flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewSecret_get(swigCPtr, this);
    }
  
    public void setMNewPin(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewPin_set(swigCPtr, this, value);
    }
  
    public String getMNewPin() {
      return flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewPin_get(swigCPtr, this);
    }
  
    public void setMNewIsPermanent(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewIsPermanent_set(swigCPtr, this, value);
    }
  
    public boolean getMNewIsPermanent() {
      return flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewIsPermanent_get(swigCPtr, this);
    }
  
    public void setMNewIsPrivate(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewIsPrivate_set(swigCPtr, this, value);
    }
  
    public boolean getMNewIsPrivate() {
      return flooJNI.BMXRTCSignalService_BMXRoomEditOptions_mNewIsPrivate_get(swigCPtr, this);
    }
  
  }

  static public class BMXRoomAllowdOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomAllowdOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomAllowdOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomAllowdOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXRoomAllowdOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomAllowdOptions(), true);
    }
  
    public void setAction(BMXRTCSignalService.AllowedAction value) {
      flooJNI.BMXRTCSignalService_BMXRoomAllowdOptions_action_set(swigCPtr, this, value.swigValue());
    }
  
    public BMXRTCSignalService.AllowedAction getAction() {
      return BMXRTCSignalService.AllowedAction.swigToEnum(flooJNI.BMXRTCSignalService_BMXRoomAllowdOptions_action_get(swigCPtr, this));
    }
  
    public void setTokens(TagList value) {
      flooJNI.BMXRTCSignalService_BMXRoomAllowdOptions_tokens_set(swigCPtr, this, TagList.getCPtr(value), value);
    }
  
    public TagList getTokens() {
      long cPtr = flooJNI.BMXRTCSignalService_BMXRoomAllowdOptions_tokens_get(swigCPtr, this);
      return (cPtr == 0) ? null : new TagList(cPtr, false);
    }
  
  }

  static public class BMXRoomModerateOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomModerateOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomModerateOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomModerateOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }

    public BMXRoomModerateOptions(long userId, boolean muteAudio, boolean muteVideo, boolean muteData) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomModerateOptions__SWIG_1(userId, muteAudio, muteVideo, muteData), true);
    }

    public void setMUserId(long value) {
      flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mUserId_set(swigCPtr, this, value);
    }
  
    public long getMUserId() {
      return flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mUserId_get(swigCPtr, this);
    }
  
    public void setMMuteAudio(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mMuteAudio_set(swigCPtr, this, value);
    }
  
    public boolean getMMuteAudio() {
      return flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mMuteAudio_get(swigCPtr, this);
    }
  
    public void setMMuteVideo(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mMuteVideo_set(swigCPtr, this, value);
    }
  
    public boolean getMMuteVideo() {
      return flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mMuteVideo_get(swigCPtr, this);
    }
  
    public void setMMuteData(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mMuteData_set(swigCPtr, this, value);
    }
  
    public boolean getMMuteData() {
      return flooJNI.BMXRTCSignalService_BMXRoomModerateOptions_mMuteData_get(swigCPtr, this);
    }
  
  }

  static public class BMXPubRoomJoinOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXPubRoomJoinOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXPubRoomJoinOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXPubRoomJoinOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXPubRoomJoinOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXPubRoomJoinOptions__SWIG_0(), true);
    }
  
    public BMXPubRoomJoinOptions(long userId, long roomId, String pin, String description, String token) {
      this(flooJNI.new_BMXRTCSignalService_BMXPubRoomJoinOptions__SWIG_1(userId, roomId, pin, description, token), true);
    }
  
    public BMXPubRoomJoinOptions(long userId, long roomId, String pin, String description) {
      this(flooJNI.new_BMXRTCSignalService_BMXPubRoomJoinOptions__SWIG_2(userId, roomId, pin, description), true);
    }
  
    public BMXPubRoomJoinOptions(long userId, long roomId, String pin) {
      this(flooJNI.new_BMXRTCSignalService_BMXPubRoomJoinOptions__SWIG_3(userId, roomId, pin), true);
    }
  
    public BMXPubRoomJoinOptions(long userId, long roomId) {
      this(flooJNI.new_BMXRTCSignalService_BMXPubRoomJoinOptions__SWIG_4(userId, roomId), true);
    }
  
    public void setMUserId(long value) {
      flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mUserId_set(swigCPtr, this, value);
    }
  
    public long getMUserId() {
      return flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mUserId_get(swigCPtr, this);
    }
  
    public void setMRoomId(long value) {
      flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mRoomId_set(swigCPtr, this, value);
    }
  
    public long getMRoomId() {
      return flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mRoomId_get(swigCPtr, this);
    }
  
    public void setMRoomPin(String value) {
      flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mRoomPin_set(swigCPtr, this, value);
    }
  
    public String getMRoomPin() {
      return flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mRoomPin_get(swigCPtr, this);
    }
  
    public void setMDescription(String value) {
      flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mDescription_set(swigCPtr, this, value);
    }
  
    public String getMDescription() {
      return flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mDescription_get(swigCPtr, this);
    }
  
    public void setMToken(String value) {
      flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mToken_set(swigCPtr, this, value);
    }
  
    public String getMToken() {
      return flooJNI.BMXRTCSignalService_BMXPubRoomJoinOptions_mToken_get(swigCPtr, this);
    }
  
  }

  static public class BMXRoomPubConfigureOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomPubConfigureOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomPubConfigureOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomPubConfigureOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXRoomPubConfigureOptions(boolean enableAudio, boolean enableVideo, boolean enableData, String display) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomPubConfigureOptions__SWIG_0(enableAudio, enableVideo, enableData, display), true);
    }
  
    public BMXRoomPubConfigureOptions(boolean enableAudio, boolean enableVideo, boolean enableData) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomPubConfigureOptions__SWIG_1(enableAudio, enableVideo, enableData), true);
    }
  
    public BMXRoomPubConfigureOptions(boolean enableAudio, boolean enableVideo) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomPubConfigureOptions__SWIG_2(enableAudio, enableVideo), true);
    }
  
    public BMXRoomPubConfigureOptions(boolean enableAudio) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomPubConfigureOptions__SWIG_3(enableAudio), true);
    }
  
    public BMXRoomPubConfigureOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomPubConfigureOptions__SWIG_4(), true);
    }
  
    public void setMEnableAudio(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mEnableAudio_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableAudio() {
      return flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mEnableAudio_get(swigCPtr, this);
    }
  
    public void setMEnableVideo(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mEnableVideo_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableVideo() {
      return flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mEnableVideo_get(swigCPtr, this);
    }
  
    public void setMEnableData(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mEnableData_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableData() {
      return flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mEnableData_get(swigCPtr, this);
    }
  
    public void setMDisplay(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mDisplay_set(swigCPtr, this, value);
    }
  
    public String getMDisplay() {
      return flooJNI.BMXRTCSignalService_BMXRoomPubConfigureOptions_mDisplay_get(swigCPtr, this);
    }
  
  }

  static public class BMXRoomSubJoinOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomSubJoinOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomSubJoinOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomSubJoinOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXRoomSubJoinOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_0(), true);
    }
  
    public BMXRoomSubJoinOptions(BMXRTCStreams janusStreams, long privateId, boolean enableAudio, boolean enableVideo, boolean enableData, boolean autoClosePc) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_1(BMXRTCStreams.getCPtr(janusStreams), janusStreams, privateId, enableAudio, enableVideo, enableData, autoClosePc), true);
    }
  
    public BMXRoomSubJoinOptions(BMXRTCStreams janusStreams, long privateId, boolean enableAudio, boolean enableVideo, boolean enableData) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_2(BMXRTCStreams.getCPtr(janusStreams), janusStreams, privateId, enableAudio, enableVideo, enableData), true);
    }
  
    public BMXRoomSubJoinOptions(BMXRTCStreams janusStreams, long privateId, boolean enableAudio, boolean enableVideo) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_3(BMXRTCStreams.getCPtr(janusStreams), janusStreams, privateId, enableAudio, enableVideo), true);
    }
  
    public BMXRoomSubJoinOptions(BMXRTCStreams janusStreams, long privateId, boolean enableAudio) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_4(BMXRTCStreams.getCPtr(janusStreams), janusStreams, privateId, enableAudio), true);
    }
  
    public BMXRoomSubJoinOptions(BMXRTCStreams janusStreams, long privateId) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_5(BMXRTCStreams.getCPtr(janusStreams), janusStreams, privateId), true);
    }
  
    public BMXRoomSubJoinOptions(BMXRTCStreams janusStreams) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubJoinOptions__SWIG_6(BMXRTCStreams.getCPtr(janusStreams), janusStreams), true);
    }
  
    public void setMUserId(long value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mUserId_set(swigCPtr, this, value);
    }
  
    public long getMUserId() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mUserId_get(swigCPtr, this);
    }
  
    public void setMRoomId(long value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mRoomId_set(swigCPtr, this, value);
    }
  
    public long getMRoomId() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mRoomId_get(swigCPtr, this);
    }
  
    public void setMRoomPin(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mRoomPin_set(swigCPtr, this, value);
    }
  
    public String getMRoomPin() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mRoomPin_get(swigCPtr, this);
    }
  
    public void setMDescription(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mDescription_set(swigCPtr, this, value);
    }
  
    public String getMDescription() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mDescription_get(swigCPtr, this);
    }
  
    public void setMToken(String value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mToken_set(swigCPtr, this, value);
    }
  
    public String getMToken() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mToken_get(swigCPtr, this);
    }
  
    public void setMPrivateId(long value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mPrivateId_set(swigCPtr, this, value);
    }
  
    public long getMPrivateId() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mPrivateId_get(swigCPtr, this);
    }
  
    public void setMEnableAudio(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mEnableAudio_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableAudio() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mEnableAudio_get(swigCPtr, this);
    }
  
    public void setMEnableVideo(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mEnableVideo_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableVideo() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mEnableVideo_get(swigCPtr, this);
    }
  
    public void setMEnableData(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mEnableData_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableData() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mEnableData_get(swigCPtr, this);
    }
  
    public void setMAutoClosePc(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mAutoClosePc_set(swigCPtr, this, value);
    }
  
    public boolean getMAutoClosePc() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_mAutoClosePc_get(swigCPtr, this);
    }
  
    public void setStreams(BMXRTCStreams value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_streams_set(swigCPtr, this, BMXRTCStreams.getCPtr(value), value);
    }
  
    public BMXRTCStreams getStreams() {
      long cPtr = flooJNI.BMXRTCSignalService_BMXRoomSubJoinOptions_streams_get(swigCPtr, this);
      return (cPtr == 0) ? null : new BMXRTCStreams(cPtr, false);
    }
  
  }

  static public class BMXRoomSubConfigureOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomSubConfigureOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomSubConfigureOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomSubConfigureOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public BMXRoomSubConfigureOptions(boolean enableAudio, boolean enableVideo, boolean enableData) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubConfigureOptions__SWIG_0(enableAudio, enableVideo, enableData), true);
    }
  
    public BMXRoomSubConfigureOptions(boolean enableAudio, boolean enableVideo) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubConfigureOptions__SWIG_1(enableAudio, enableVideo), true);
    }
  
    public BMXRoomSubConfigureOptions(boolean enableAudio) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubConfigureOptions__SWIG_2(enableAudio), true);
    }
  
    public BMXRoomSubConfigureOptions() {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubConfigureOptions__SWIG_3(), true);
    }
  
    public void setMEnableAudio(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubConfigureOptions_mEnableAudio_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableAudio() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubConfigureOptions_mEnableAudio_get(swigCPtr, this);
    }
  
    public void setMEnableVideo(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubConfigureOptions_mEnableVideo_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableVideo() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubConfigureOptions_mEnableVideo_get(swigCPtr, this);
    }
  
    public void setMEnableData(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubConfigureOptions_mEnableData_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableData() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubConfigureOptions_mEnableData_get(swigCPtr, this);
    }
  
  }

  static public class BMXRoomSubSwitchOptions {
    private transient long swigCPtr;
    private transient boolean swigCMemOwn;
  
    protected BMXRoomSubSwitchOptions(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(BMXRoomSubSwitchOptions obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          flooJNI.delete_BMXRTCSignalService_BMXRoomSubSwitchOptions(swigCPtr);
        }
        swigCPtr = 0;
      }
    }

    public BMXRoomSubSwitchOptions(long feedId, boolean enableAudio, boolean enableVideo, boolean enableData) {
      this(flooJNI.new_BMXRTCSignalService_BMXRoomSubSwitchOptions__SWIG_1(feedId, enableAudio, enableVideo, enableData), true);
    }

    public void setMFeedId(long value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mFeedId_set(swigCPtr, this, value);
    }
  
    public long getMFeedId() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mFeedId_get(swigCPtr, this);
    }
  
    public void setMEnableAudio(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mEnableAudio_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableAudio() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mEnableAudio_get(swigCPtr, this);
    }
  
    public void setMEnableVideo(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mEnableVideo_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableVideo() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mEnableVideo_get(swigCPtr, this);
    }
  
    public void setMEnableData(boolean value) {
      flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mEnableData_set(swigCPtr, this, value);
    }
  
    public boolean getMEnableData() {
      return flooJNI.BMXRTCSignalService_BMXRoomSubSwitchOptions_mEnableData_get(swigCPtr, this);
    }
  
  }

  public void createSession() {
    flooJNI.BMXRTCSignalService_createSession(swigCPtr, this);
  }

  public void attachSession(BMXRTCSession session, BMXRTCSignalService.HandlerType type) {
    flooJNI.BMXRTCSignalService_attachSession(swigCPtr, this, BMXRTCSession.getCPtr(session), session, type.swigValue());
  }

  public void createRoom(BMXRTCSession session, BMXRTCSignalService.BMXRoomCreateOptions options) {
    flooJNI.BMXRTCSignalService_createRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXRoomCreateOptions.getCPtr(options));
  }

  public void destroyRoom(BMXRTCSession session, BMXRTCRoom room, boolean isPermanent) {
    flooJNI.BMXRTCSignalService_destroyRoom__SWIG_0(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, isPermanent);
  }

  public void destroyRoom(BMXRTCSession session, BMXRTCRoom room) {
    flooJNI.BMXRTCSignalService_destroyRoom__SWIG_1(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room);
  }

  public void editRoom(BMXRTCSession session, BMXRTCRoom room, BMXRTCSignalService.BMXRoomEditOptions options) {
    flooJNI.BMXRTCSignalService_editRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, BMXRTCSignalService.BMXRoomEditOptions.getCPtr(options));
  }

  public void isExistsRoom(BMXRTCSession session, long roomId) {
    flooJNI.BMXRTCSignalService_isExistsRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session, roomId);
  }

  public void allowed(BMXRTCSession session, BMXRTCRoom room, BMXRTCSignalService.BMXRoomAllowdOptions options) {
    flooJNI.BMXRTCSignalService_allowed(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, BMXRTCSignalService.BMXRoomAllowdOptions.getCPtr(options));
  }

  public void kickParticipants(BMXRTCSession session, BMXRTCRoom room, long userId) {
    flooJNI.BMXRTCSignalService_kickParticipants(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, userId);
  }

  public void moderate(BMXRTCSession session, BMXRTCRoom room, BMXRTCSignalService.BMXRoomModerateOptions options) {
    flooJNI.BMXRTCSignalService_moderate(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, BMXRTCSignalService.BMXRoomModerateOptions.getCPtr(options));
  }

  public void listRoom(BMXRTCSession session) {
    flooJNI.BMXRTCSignalService_listRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session);
  }

  public void listRoomparticipants(BMXRTCSession session, BMXRTCRoom room) {
    flooJNI.BMXRTCSignalService_listRoomparticipants(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room);
  }

  public void trickle(BMXRTCSession session, BMXRTCSignalService.HandlerType type, String sdpMid, int sdpMLineIndex, String candidate) {
    flooJNI.BMXRTCSignalService_trickle(swigCPtr, this, BMXRTCSession.getCPtr(session), session, type.swigValue(), sdpMid, sdpMLineIndex, candidate);
  }

  public void trickleCompleted(BMXRTCSession session, BMXRTCSignalService.HandlerType type) {
    flooJNI.BMXRTCSignalService_trickleCompleted(swigCPtr, this, BMXRTCSession.getCPtr(session), session, type.swigValue());
  }

  public void pubJoinRoom(BMXRTCSession session, BMXRTCSignalService.BMXPubRoomJoinOptions options) {
    flooJNI.BMXRTCSignalService_pubJoinRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXPubRoomJoinOptions.getCPtr(options));
  }

  public void pubPublish(BMXRTCSession session, BMXRTCSignalService.BMXRoomPubConfigureOptions options, BMXRoomSDPInfo sdp) {
    flooJNI.BMXRTCSignalService_pubPublish(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXRoomPubConfigureOptions.getCPtr(options), BMXRoomSDPInfo.getCPtr(sdp), sdp);
  }

  public void pubUnPublish(BMXRTCSession session) {
    flooJNI.BMXRTCSignalService_pubUnPublish(swigCPtr, this, BMXRTCSession.getCPtr(session), session);
  }

  public void pubConfigue(BMXRTCSession session, BMXRTCSignalService.BMXRoomPubConfigureOptions options, BMXRoomSDPInfo sdp) {
    flooJNI.BMXRTCSignalService_pubConfigue(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXRoomPubConfigureOptions.getCPtr(options), BMXRoomSDPInfo.getCPtr(sdp), sdp);
  }

  public void subJoinRoom(BMXRTCSession session, BMXRTCSignalService.BMXRoomSubJoinOptions options) {
    flooJNI.BMXRTCSignalService_subJoinRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXRoomSubJoinOptions.getCPtr(options));
  }

  public void subStart(BMXRTCSession session, BMXRTCRoom room, BMXRoomSDPInfo sdp) {
    flooJNI.BMXRTCSignalService_subStart(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, BMXRoomSDPInfo.getCPtr(sdp), sdp);
  }

  public void subPause(BMXRTCSession session, BMXRTCRoom room) {
    flooJNI.BMXRTCSignalService_subPause(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room);
  }

  public void subUnsubscribe(BMXRTCSession session, BMXRTCRoom room, BMXRTCStreams streams) {
    flooJNI.BMXRTCSignalService_subUnsubscribe(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCRoom.getCPtr(room), room, BMXRTCStreams.getCPtr(streams), streams);
  }

  public void subConfigure(BMXRTCSession session, BMXRTCSignalService.BMXRoomSubConfigureOptions options, BMXRoomSDPInfo sdp) {
    flooJNI.BMXRTCSignalService_subConfigure(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXRoomSubConfigureOptions.getCPtr(options), BMXRoomSDPInfo.getCPtr(sdp), sdp);
  }

  public void subSwitch(BMXRTCSession session, BMXRTCSignalService.BMXRoomSubSwitchOptions options) {
    flooJNI.BMXRTCSignalService_subSwitch(swigCPtr, this, BMXRTCSession.getCPtr(session), session, BMXRTCSignalService.BMXRoomSubSwitchOptions.getCPtr(options));
  }

  public void leaveRoom(BMXRTCSession session) {
    flooJNI.BMXRTCSignalService_leaveRoom(swigCPtr, this, BMXRTCSession.getCPtr(session), session);
  }

  public void hangUpSession(BMXRTCSession session) {
    flooJNI.BMXRTCSignalService_hangUpSession(swigCPtr, this, BMXRTCSession.getCPtr(session), session);
  }

  public void detachSession(BMXRTCSession session, BMXRTCSignalService.HandlerType type) {
    flooJNI.BMXRTCSignalService_detachSession(swigCPtr, this, BMXRTCSession.getCPtr(session), session, type.swigValue());
  }

  public void destroySession(BMXRTCSession session) {
    flooJNI.BMXRTCSignalService_destroySession(swigCPtr, this, BMXRTCSession.getCPtr(session), session);
  }

  public void addBMXRTCSignalServiceListener(BMXRTCSignalServiceListener listener) {
    flooJNI.BMXRTCSignalService_addBMXRTCSignalServiceListener(swigCPtr, this, BMXRTCSignalServiceListener.getCPtr(listener), listener);
  }

  public void removeBMXRTCSignalServiceListener(BMXRTCSignalServiceListener listener) {
    flooJNI.BMXRTCSignalService_removeBMXRTCSignalServiceListener(swigCPtr, this, BMXRTCSignalServiceListener.getCPtr(listener), listener);
  }

  public enum HandlerType {
    publishType,
    subscribeType;

    public final int swigValue() {
      return swigValue;
    }

    public static HandlerType swigToEnum(int swigValue) {
      HandlerType[] swigValues = HandlerType.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (HandlerType swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + HandlerType.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private HandlerType() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private HandlerType(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private HandlerType(HandlerType swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

  public enum AllowedAction {
    EnableAction,
    DisableAction,
    AddAction,
    RemoveAction;

    public final int swigValue() {
      return swigValue;
    }

    public static AllowedAction swigToEnum(int swigValue) {
      AllowedAction[] swigValues = AllowedAction.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (AllowedAction swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + AllowedAction.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private AllowedAction() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private AllowedAction(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private AllowedAction(AllowedAction swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
