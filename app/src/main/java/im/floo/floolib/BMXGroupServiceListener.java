/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package im.floo.floolib;

/**
 *  群组变化监听者
 **/
public class BMXGroupServiceListener {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BMXGroupServiceListener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BMXGroupServiceListener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        flooJNI.delete_BMXGroupServiceListener(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    flooJNI.BMXGroupServiceListener_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    flooJNI.BMXGroupServiceListener_change_ownership(this, swigCPtr, true);
  }

  /**
   *  多设备同步创建群组
   * @param group 新创建的群组
   **/
  public void onGroupCreate(BMXGroup group) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onGroupCreate(swigCPtr, this, BMXGroup.getCPtr(group), group); else flooJNI.BMXGroupServiceListener_onGroupCreateSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group);
  }

  /**
   *  群列表更新了
   * @param list 更新的群组列表
   **/
  public void onGroupListUpdate(BMXGroupList list) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onGroupListUpdate__SWIG_0(swigCPtr, this, BMXGroupList.getCPtr(list), list); else flooJNI.BMXGroupServiceListener_onGroupListUpdateSwigExplicitBMXGroupServiceListener__SWIG_0(swigCPtr, this, BMXGroupList.getCPtr(list), list);
  }

  /**
   *  加入了某群
   * @param group 加入的群组
   **/
  public void onGroupJoined(BMXGroup group) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onGroupJoined(swigCPtr, this, BMXGroup.getCPtr(group), group); else flooJNI.BMXGroupServiceListener_onGroupJoinedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group);
  }

  /**
   *  退出了某群
   * @param group 退出的群组
   * @param reason 退出原因
   **/
  public void onGroupLeft(BMXGroup group, String reason) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onGroupLeft(swigCPtr, this, BMXGroup.getCPtr(group), group, reason); else flooJNI.BMXGroupServiceListener_onGroupLeftSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, reason);
  }

  /**
   *  收到入群邀请
   * @param groupId 邀请进入的群组id
   * @param inviter 邀请者id
   * @param message 邀请原因
   **/
  public void onInvitated(long groupId, long inviter, String message) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onInvitated(swigCPtr, this, groupId, inviter, message); else flooJNI.BMXGroupServiceListener_onInvitatedSwigExplicitBMXGroupServiceListener(swigCPtr, this, groupId, inviter, message);
  }

  /**
   *  入群邀请被接受
   * @param group 邀请被同意的群组
   * @param inviteeId 被邀请者id
   **/
  public void onInvitationAccepted(BMXGroup group, long inviteeId) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onInvitationAccepted(swigCPtr, this, BMXGroup.getCPtr(group), group, inviteeId); else flooJNI.BMXGroupServiceListener_onInvitationAcceptedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, inviteeId);
  }

  /**
   *  入群申请被拒绝
   * @param group 邀请被拒绝的群组
   * @param inviteeId 被邀请者id
   * @param reason 拒绝原因
   **/
  public void onInvitationDeclined(BMXGroup group, long inviteeId, String reason) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onInvitationDeclined(swigCPtr, this, BMXGroup.getCPtr(group), group, inviteeId, reason); else flooJNI.BMXGroupServiceListener_onInvitationDeclinedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, inviteeId, reason);
  }

  /**
   *  收到入群申请
   * @param group 收到入群申请的群组
   * @param applicantId 申请者id
   * @param message 申请原因
   **/
  public void onApplied(BMXGroup group, long applicantId, String message) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onApplied(swigCPtr, this, BMXGroup.getCPtr(group), group, applicantId, message); else flooJNI.BMXGroupServiceListener_onAppliedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, applicantId, message);
  }

  /**
   *  入群申请被接受
   * @param group 入群申请被接受的群组
   * @param approver 申请的批准者
   **/
  public void onApplicationAccepted(BMXGroup group, long approver) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onApplicationAccepted(swigCPtr, this, BMXGroup.getCPtr(group), group, approver); else flooJNI.BMXGroupServiceListener_onApplicationAcceptedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, approver);
  }

  /**
   *  入群申请被拒绝
   * @param group 入群申请被拒绝的群组
   * @param approver 申请的批准者
   * @param reason 拒绝的原因
   **/
  public void onApplicationDeclined(BMXGroup group, long approver, String reason) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onApplicationDeclined(swigCPtr, this, BMXGroup.getCPtr(group), group, approver, reason); else flooJNI.BMXGroupServiceListener_onApplicationDeclinedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, approver, reason);
  }

  /**
   *  群成员被禁言
   * @param group 群成员被禁言的群组
   * @param members 被禁言的群成员id列表
   * @param duration 禁言时长
   **/
  public void onMembersBanned(BMXGroup group, ListOfLongLong members, long duration) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onMembersBanned(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members, duration); else flooJNI.BMXGroupServiceListener_onMembersBannedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members, duration);
  }

  /**
   *  群成员被解除禁言
   * @param group 群成员被解除禁言的群组
   * @param members 被解除禁言的群成员id列表
   **/
  public void onMembersUnbanned(BMXGroup group, ListOfLongLong members) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onMembersUnbanned(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members); else flooJNI.BMXGroupServiceListener_onMembersUnbannedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members);
  }

  /**
   *  加入新成员
   * @param group 有成员加入的群组
   * @param memberId 加入成员的id
   * @param inviter 邀请者id
   **/
  public void onMemberJoined(BMXGroup group, long memberId, long inviter) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onMemberJoined(swigCPtr, this, BMXGroup.getCPtr(group), group, memberId, inviter); else flooJNI.BMXGroupServiceListener_onMemberJoinedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, memberId, inviter);
  }

  /**
   *  群成员退出
   * @param group 有成员退出的群组
   * @param memberId 退出的群成员id
   * @param reason 退出的原因
   **/
  public void onMemberLeft(BMXGroup group, long memberId, String reason) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onMemberLeft(swigCPtr, this, BMXGroup.getCPtr(group), group, memberId, reason); else flooJNI.BMXGroupServiceListener_onMemberLeftSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, memberId, reason);
  }

  /**
   *  添加了新管理员
   * @param group 发生添加新管理员的群组
   * @param members 被提升为管理员的成员列表
   **/
  public void onAdminsAdded(BMXGroup group, ListOfLongLong members) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onAdminsAdded(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members); else flooJNI.BMXGroupServiceListener_onAdminsAddedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members);
  }

  /**
   *  移除了管理员
   * @param group 发生移除管理员的群组
   * @param members 被移除了管理员的成员列表
   * @param reason 被移除的原因
   **/
  public void onAdminsRemoved(BMXGroup group, ListOfLongLong members, String reason) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onAdminsRemoved(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members, reason); else flooJNI.BMXGroupServiceListener_onAdminsRemovedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members, reason);
  }

  /**
   *  成为群主
   * @param group 被转让为群主的群组
   **/
  public void onOwnerAssigned(BMXGroup group) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onOwnerAssigned(swigCPtr, this, BMXGroup.getCPtr(group), group); else flooJNI.BMXGroupServiceListener_onOwnerAssignedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group);
  }

  /**
   *  群组信息变更
   * @param group 群信息发生变更的群组
   * @param type 发生变更的群信息类型
   **/
  public void onGroupInfoUpdate(BMXGroup group, BMXGroup.UpdateInfoType type) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onGroupInfoUpdate(swigCPtr, this, BMXGroup.getCPtr(group), group, type.swigValue()); else flooJNI.BMXGroupServiceListener_onGroupInfoUpdateSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, type.swigValue());
  }

  /**
   *  群成员更改群内昵称
   * @param group 发生群成员变更群昵称的群组
   * @param memberId 变更群昵称的群成员id
   * @param nickName 变更后的群昵称
   **/
  public void onMemberChangeNickName(BMXGroup group, long memberId, String nickName) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onMemberChangeNickName(swigCPtr, this, BMXGroup.getCPtr(group), group, memberId, nickName); else flooJNI.BMXGroupServiceListener_onMemberChangeNickNameSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, memberId, nickName);
  }

  /**
   *  收到群公告
   * @param group 发生群公告更新的群组
   * @param announcement 变更后的最新的群更高
   **/
  public void onAnnouncementUpdate(BMXGroup group, BMXGroup.Announcement announcement) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onAnnouncementUpdate(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.Announcement.getCPtr(announcement)); else flooJNI.BMXGroupServiceListener_onAnnouncementUpdateSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.Announcement.getCPtr(announcement));
  }

  /**
   *  收到共享文件
   * @param group 发生群共享文件上传的群组
   * @param sharedFile 新上传的群共享文件
   **/
  public void onSharedFileUploaded(BMXGroup group, BMXGroup.SharedFile sharedFile) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onSharedFileUploaded(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.SharedFile.getCPtr(sharedFile)); else flooJNI.BMXGroupServiceListener_onSharedFileUploadedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.SharedFile.getCPtr(sharedFile));
  }

  /**
   *  删除了共享文件
   * @param group 发生群共享文件删除的群组
   * @param sharedFile 被删除的群共享文件
   **/
  public void onSharedFileDeleted(BMXGroup group, BMXGroup.SharedFile sharedFile) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onSharedFileDeleted(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.SharedFile.getCPtr(sharedFile)); else flooJNI.BMXGroupServiceListener_onSharedFileDeletedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.SharedFile.getCPtr(sharedFile));
  }

  /**
   *  共享文件更新文件名
   * @param group 发生群共享文件更新的群组
   * @param sharedFile 更新的群共享文件
   **/
  public void onSharedFileUpdated(BMXGroup group, BMXGroup.SharedFile sharedFile) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onSharedFileUpdated(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.SharedFile.getCPtr(sharedFile)); else flooJNI.BMXGroupServiceListener_onSharedFileUpdatedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, BMXGroup.SharedFile.getCPtr(sharedFile));
  }

  /**
   *  添加黑名单
   * @param group 添加黑名单的群组
   * @param members 添加的黑名单成员列表
   **/
  public void onBlockListAdded(BMXGroup group, ListOfLongLong members) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onBlockListAdded(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members); else flooJNI.BMXGroupServiceListener_onBlockListAddedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members);
  }

  /**
   *  删除黑名单
   * @param group 删除黑名单的群组
   * @param members 删除的黑名单成员列表
   **/
  public void onBlockListRemoved(BMXGroup group, ListOfLongLong members) {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onBlockListRemoved(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members); else flooJNI.BMXGroupServiceListener_onBlockListRemovedSwigExplicitBMXGroupServiceListener(swigCPtr, this, BMXGroup.getCPtr(group), group, ListOfLongLong.getCPtr(members), members);
  }

  /**
   *  客户端从服务器拉取到新群组时触发，用于用户群组列表更新，从SDK调用本地获取群组即可取得全部成员信息
   **/
  public void onGroupListUpdate() {
    if (getClass() == BMXGroupServiceListener.class) flooJNI.BMXGroupServiceListener_onGroupListUpdate__SWIG_1(swigCPtr, this); else flooJNI.BMXGroupServiceListener_onGroupListUpdateSwigExplicitBMXGroupServiceListener__SWIG_1(swigCPtr, this);
  }

  public BMXGroupServiceListener() {
    this(flooJNI.new_BMXGroupServiceListener(), true);
    flooJNI.BMXGroupServiceListener_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void registerGroupService(BMXGroupService service) {
    flooJNI.BMXGroupServiceListener_registerGroupService(swigCPtr, this, BMXGroupService.getCPtr(service), service);
  }

}
