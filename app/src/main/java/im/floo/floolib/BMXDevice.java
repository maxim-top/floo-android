/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package im.floo.floolib;

/**
 *  设备信息
 **/
public class BMXDevice extends BMXBaseObject {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected BMXDevice(long cPtr, boolean cMemoryOwn) {
    super(flooJNI.BMXDevice_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BMXDevice obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        flooJNI.delete_BMXDevice(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  /**
   *  设备序列号
   * @return int
   **/
  public int deviceSN() {
    return flooJNI.BMXDevice_deviceSN(swigCPtr, this);
  }

  /**
   *  用户id
   * @return int64_t
   **/
  public long userId() {
    return flooJNI.BMXDevice_userId(swigCPtr, this);
  }

  /**
   *  软件平台
   * @return int
   **/
  public int platform() {
    return flooJNI.BMXDevice_platform(swigCPtr, this);
  }

  /**
   *  用户代理信息
   * @return std::string
   **/
  public String userAgent() {
    return flooJNI.BMXDevice_userAgent(swigCPtr, this);
  }

  /**
   *  设置用户代理信息
   * @param userAgent 用户代理信息
   **/
  public void setUserAgent(String userAgent) {
    flooJNI.BMXDevice_setUserAgent(swigCPtr, this, userAgent);
  }

  /**
   *  是否是当前设备
   * @return bool
   **/
  public boolean isCurrentDevice() {
    return flooJNI.BMXDevice_isCurrentDevice(swigCPtr, this);
  }

}
